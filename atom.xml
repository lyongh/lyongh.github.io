<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>奔跑的兔子</title>
  
  <subtitle>做一只安静的兔子</subtitle>
  <link href="https://fycy.site/atom.xml" rel="self"/>
  
  <link href="https://fycy.site/"/>
  <updated>2021-09-12T04:21:16.426Z</updated>
  <id>https://fycy.site/</id>
  
  <author>
    <name>亮S</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub-Hexo-搭建个人网站详细教程</title>
    <link href="https://fycy.site/2021/09/12/GitHub-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/"/>
    <id>https://fycy.site/2021/09/12/GitHub-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/</id>
    <published>2021-09-12T02:19:33.000Z</published>
    <updated>2021-09-12T04:21:16.426Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><p>随着互联网浪潮的翻腾，国内外涌现出越来越多优秀的社交网站让用户分享信息更加便捷。然后，如果你是一个不甘寂寞的程序猿（媛），是否也想要搭建一个属于自己的个人网站，如果你曾经或者现在正有这样的想法，请跟随这篇文章发挥你的Geek精神，让你快速拥有自己的博客网站，写文章记录生活，享受这种从0到1的过程。<br>你见过的最棒的个人博客界面是什么样的？<br>什么是Hexo ?</p><p> <img src="/.site//l/blog/source/_posts/GitHub-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/008oqqa4ly1gu4fxfqyxlj60p008cdh802.jpg" alt="这个是hexo"></p><p>Hexo是一款基于Node.js的静态博客框架，<strong>依赖少易于安装使用</strong>，可以方便的生成静态网页托管在<a href="https://github.com/">GitHub</a>和<a href="https://www.heroku.com/">Heroku</a>上，是搭建博客的首选框架。这里我们选用的是GitHub，你没看错，全球最大的同性恋交友网站（<em>逃……</em>）。Hexo同时也是GitHub上的开源项目，参见：<a href="https://github.com/hexojs/hexo">hexojs/hexo</a> 如果想要更加全面的了解Hexo，可以到其官网 <a href="https://hexo.io/zh-cn/">Hexo</a>更多的细节，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。这里，默认各位猿/媛儿都知道GitHub就不再赘述。<br>这是我的个人博客效果: <a href="https://lyongh.github.io/">叔力昂 · LyonShu</a><br>下面正式从零开始搭建年轻人的第一个网站。</p><h2 id="搭建步骤："><a href="#搭建步骤：" class="headerlink" title="搭建步骤："></a>搭建步骤：</h2><hr><ul><li><p> 获得个人网站域名</p></li><li><p> GitHub创建个人仓库</p></li><li><p> 安装Git</p></li><li><p> 安装Node.js</p></li><li><p> 安装Hexo</p></li><li><p> 推送网站</p></li><li><p> 绑定域名</p></li><li><p> 更换主题</p></li><li><p> 初识MarkDown语法</p></li><li><p> 发布文章</p></li><li><p> 寻找图床</p></li><li><p> 个性化设置</p></li><li><p> 其他</p></li><li><p> 附录</p></li></ul><h3 id="获得个人网站域名"><a href="#获得个人网站域名" class="headerlink" title="获得个人网站域名"></a>获得个人网站域名</h3><p>域名是网站的入口，也是网站的第一印象，比如饿了么的官网的域名是：<a href="https://www.ele.me/">https://www.ele.me/</a> ，很是巧妙。常见的有com,cn,net,org等后缀，也有小众的xyz,me,io等后缀，根据你自己的喜好，选择不同的后缀，比如我选择就是常见的com后缀。很多小众奇特的后缀在大陆是没办法备案的，网站也就无法上线。然而使用GitHub托管我们的网站，完全不需要备案，因为托管我们的网站内容的服务器在美国，而且在国内备案流程也比较繁杂，时间需要一周左右。<br>申请域名的地方有很多，这里推荐阿里云：<a href="https://www.aliyun.com/index.htm">阿里云</a>-为了无法计算的价值 申请入口：域名注册 购买域名这也是我们整个搭建过程中惟一一个需要花钱的地方。如果你已经有了空闲域名就无需购买，直接使用即可。</p><h3 id="GitHub创建个人仓库"><a href="#GitHub创建个人仓库" class="headerlink" title="GitHub创建个人仓库"></a>GitHub创建个人仓库</h3><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号：Build software better, together 点击GitHub中的New repository创建新仓库，仓库名应该为：用户名.<a href="http://github.io/">http://github.io</a> 这个用户名使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名为：</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p>什么是Git ?简单来说Git是开源的分布式版本控制系统，用于敏捷高效地处理项目。我们网站在本地搭建好了，需要使用Git同步到GitHub上。如果想要了解Git的细节，参看廖雪峰老师的Git教程：Git教程 从Git官网下载：Git - Downloading Package 现在的机子基本都是64位的，选择64位的安装包，下载后安装，在命令行里输入git测试是否安装成功，若安装失败，参看其他详细的Git安装教程。安装成功后，将你的Git与GitHub帐号绑定，鼠标右击打开Git Bash</p><p>或者在菜单里搜索Git Bash，设置user.name和user.email配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>生成ssh密钥文件：<br><code>ssh-keygen -t rsa -C &quot;你的GitHub注册邮箱&quot;</code></p><p>然后直接三个回车即可，默认不需要设置密码然后找到生成的.ssh的文件夹中的id_rsa.pub密钥，将内容全部复制打开GitHub_Settings_keys 页面，新建new SSH Key,Title为标题，任意填即可，将刚刚复制的id_rsa.pub内容粘贴进去，最后点击Add SSH key。在Git Bash中检测GitHub公钥设置是否成功，输入</p><p><code>ssh git@github.com </code></p><p>如上则说明成功。这里之所以设置GitHub密钥原因是，通过非对称加密的公钥与私钥来完成加密，公钥放置在GitHub上，私钥放置在自己的电脑里。GitHub要求每次推送代码都是合法用户，所以每次推送都需要输入账号密码验证推送用户是否是合法用户，为了省去每次输入密码的步骤，采用了ssh，当你推送的时候，git就会匹配你的私钥跟GitHub上面的公钥是否是配对的，若是匹配就认为你是合法用户，则允许推送。这样可以保证每次的推送都是正确合法的。</p><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><p>Hexo基于Node.js，Node.js下载地址：Download | Node.js 下载安装包，注意安装Node.js会包含环境变量及npm的安装，安装后，检测Node.js是否安装成功，在命令行中输入 node -v :</p><p>检测npm是否安装成功，在命令行中输入<code>npm -v </code></p><p>到这了，安装Hexo的环境已经全部搭建完成。</p><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>Hexo就是我们的个人博客网站的框架， 这里需要自己在电脑常里创建一个文件夹，可以命名为Blog，Hexo框架与以后你自己发布的网页都在这个文件夹中。创建好后，进入文件夹中，按住shift键，右击鼠标点击命令行</p><p>打开终端，用sudo登录，因为npm镜像源比较慢，我们先安装cnpm ,这个也是淘宝的镜像源<br>输入：<br><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><p>接下来正式全局安装hexo</p><p><code>cnpm install -g hexo-cli </code></p><p>这个安装时间较长耐心等待，安装完成后，新建一个文件夹，命名：<code>blog</code>，进入<code>blog</code></p><p>初始化我们的博客，输入：</p><p><code>sudo hexo init</code></p><p>然后用<code>hexo s</code>命令启hexo  </p><p>注意，这里的命令都是作用在刚刚创建的Blog文件夹中。为了检测我们的网站雏形，分别按顺序输入以下三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;我的第一篇博客文章&quot;</span></span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>这些命令在后面作介绍，完成后，打开浏览器输入地址：<br><code>localhost:4000</code><br>可以看出我们写出第一篇博客，只不过我下图是我修改过的配置，和你的显示不一样。</p><p>接下来如何将hexo博客部署到github上去，在github上新建 一个仓库，记住仓库的网址(仓库的名称必须是自己的名称)，如github的名称是<em>axiang</em>，那么命名必须必须以<em>axiang</em>开始。</p><p>接下来在blog的目录下，装一个git部署的插件<br><code>cnpm install hexo-deployer-git --save</code><br>接下来设置_config.yml<br>在deploy中，<strong>修改成如下的表述</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: https://github.com/lyongh/lyongh.github.io</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>用hexo d命令来推</p><h3 id="（特别提醒）如果在使用git提交代码时报错如下："><a href="#（特别提醒）如果在使用git提交代码时报错如下：" class="headerlink" title="（特别提醒）如果在使用git提交代码时报错如下："></a>（特别提醒）如果在使用git提交代码时报错如下：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">remote: Support <span class="keyword">for</span> password authentication was removed on August 13, 2021. Please use a personal access token instead.</span><br><span class="line">remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ <span class="keyword">for</span> more information.</span><br><span class="line">fatal: unable to access ‘https://github.com/xxx/xxx.git/’: The requested URL returned error: 403</span><br></pre></td></tr></table></figure><p>如果以前是使用github账号密码提交代码的，从8月14号起将无法使用。<br>原因是github从8月14日起弃用了账密验证Git操作，将改用token或SSH密钥<br>需要改成token来代替密码<br>创建token的方法参照github的官方文档<br><code>https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token</code><br>创建完成后切记保存好生成的token，然后在git push的时候，<strong>使用复制好的token</strong>来代替密码就ok了</p><h3 id="（特别提醒2）mac在打开文件时候需要权限要求时，可以打开显示简介，并打开🔒，添加本机用户，并在设置中运用到其他文件"><a href="#（特别提醒2）mac在打开文件时候需要权限要求时，可以打开显示简介，并打开🔒，添加本机用户，并在设置中运用到其他文件" class="headerlink" title="（特别提醒2）mac在打开文件时候需要权限要求时，可以打开显示简介，并打开🔒，添加本机用户，并在设置中运用到其他文件"></a>（特别提醒2）mac在打开文件时候需要<del>权限要求时</del>，可以打开<em>显示简介</em>，并打开<em>🔒</em>，添加<em>本机用户</em>，并在<em>设置</em>中<em>运用到其他文件</em></h3><p>现在来介绍常用的Hexo命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g <span class="comment">#安装Hexo</span></span><br><span class="line">npm update hexo -g <span class="comment">#升级</span></span><br><span class="line">hexo init <span class="comment">#初始化博客命令简写</span></span><br><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署</span></span><br><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure><p>刚刚的三个命令依次是新建一篇博客文章、生成网页、在本地预览的操作。</p><h3 id="推送网站"><a href="#推送网站" class="headerlink" title="推送网站"></a>推送网站</h3><p>上面只是在本地预览，接下来要做的就是就是推送网站，也就是发布网站，让我们的网站可以被更多的人访问。在设置之前，需要解释一个概念，在blog根目录里的_config.yml文件称为站点配置文件，如下图</p><p>进入根目录里的themes文件夹，里面也有个_config.yml文件，这个称为主题配置文件，下一步将我们的Hexo与GitHub关联起来，打开站点的配置文件_config.yml，翻到最后修改为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line"><span class="built_in">type</span>: git</span><br><span class="line">repo: 这里填入你之前在GitHub上创建仓库的完整路径，记得加上 .git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><h3 id="保存站点配置文件。"><a href="#保存站点配置文件。" class="headerlink" title="保存站点配置文件。"></a>保存站点配置文件。</h3><p>其实就是给hexo d 这个命令做相应的配置，让hexo知道你要把blog部署在哪个位置，很显然，我们部署在我们GitHub的仓库里。最后安装Git部署插件，输入命令：</p><p><code>cnpm install hexo-deployer-git --save</code></p><p>这时，我们要严格分别输入三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo s</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>其实第四条的 <code>hexo d</code> 就是部署网站命令，d是deploy的缩写。</p><p>完成后，打开浏览器，在地址栏输入你的放置个人网站的仓库路径，即 <a href="http://xxxx.github.io/">http://xxxx.github.io</a> ，比如我的xxxx就是我的GitHub用户名：</p><p>你就会发现你的博客已经上线了，可以在网络上被访问了。<br>绑定域名<br>虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:<a href="http://xxxx.github.io,而我们想使用我们自己的个性化域名,这就需要绑定我们自己的域名.这里演示的是在阿里云万网的域名绑定,在国内主流的域名代理厂商也就阿里云和腾讯云.登录到阿里云,进入管理控制台的域名列表,找到你的个性化域名,进入解析/">http://xxxx.github.io，而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。这里演示的是在阿里云万网的域名绑定，在国内主流的域名代理厂商也就阿里云和腾讯云。登录到阿里云，进入管理控制台的域名列表，找到你的个性化域名，进入解析</a><br><img src="/.site//l/blog/source/_posts/GitHub-Hexo-%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B/008oqqa4ly1gu4iqypdv0j60k00jo0tj02.jpg"><br>然后添加解析<br><img src="https://wx4.sinaimg.cn/bmiddle/008oqqa4ly1gu4iqypdv0j60k00jo0tj02.jpg"><br>包括添加三条解析记录，192.30.252.153是GitHub的地址，你也可以ping你的 <a href="http://xxxx.github.io/">http://xxxx.github.io</a> 的ip地址，填入进去。第三个记录类型是CNAME，CNAME的记录值是：你的用户名.<a href="http://github.io/">http://github.io</a> 这里千万别弄错了。<br><strong>第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名</strong><br><img src="https://wx3.sinaimg.cn/bmiddle/008oqqa4ly1gu4iwbsy4ij60pd04odg302.jpg"><br>点击save保存。</p><p>第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，对，只要写进你自己的域名即可。如果带有www，那么以后访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。所以建议，不要带有www。这里我还是写了www(不建议带有www):</p><p>保存，命名为CNAME ，注意保存成所有文件而不是txt文件。<br>完成这三步，进入blog目录中，按住shift键右击打开命令行，依次输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>如果你不喜欢Hexo默认的主题，可以更换不同的主题，主题传送门：<a href="https://hexo.io/themes/">Themes</a> 我自己使用的是Next主题，可以在blog目录中的themes文件夹中查看你自己主题是什么。现在把默认主题更改成Next主题，在blog目录中（就是命令行的位置处于blog目录）打开命令行输入：<br><code>git clone https://github.com/iissnan/hexo-theme-next themes/next</code></p><p>hexo默认主题是landscape，因为太普通了，想换一个，好不容易解决git clone速度慢的问题，屁颠屁颠的配置好_config.yml，打开网页一看，给我出了这么个玩意</p><p><code>extends includes/layout.pug block content #recent-posts.recent-posts include includes/recent-posts.pug include includes/pagination.pug</code><br>网页什么样式，文字都没有，果然是神烦的hexo，不多逼逼，说一下解决办法</p><p>1、在hexo目录下打开git bash，输入命令：</p><p><code>cnpm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code></p><p>2、清除缓存</p><p>hexo clean<br>3、生成静态文件，查看效果</p><p>hexo g<br>hexo s</p><p>这是将Next主题下载到blog目录的themes主题下的next文件夹中。打开站点的_config.yml配置文件，修改主题为next<br><img src="https://wx2.sinaimg.cn/bmiddle/008oqqa4ly1gu4jgt001dj60i503dq3b02.jpg"></p><p>打开主题的_config.yml配置文件，不是站点主题文件，找到Scheme Settings<br><img src="https://wx4.sinaimg.cn/bmiddle/008oqqa4ly1gu4jli7wk6j60r105dwex02.jpg"><br>next主题有三个样式，我用的是Pisces，你们可以自己试试看，选择你自己喜欢的样式（只需要把行首的#去除，#是注释），选择好后，再次部署网站，hexo g、hexo d，查看效果。选择其他主题，按照上述过程即可实现。</p><h3 id="初识Markdown语法"><a href="#初识Markdown语法" class="headerlink" title="初识Markdown语法"></a>初识Markdown语法</h3><p>Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。Markdown语法简洁明了、容易掌握，而且功能比纯文本更强，因此写博客使用它，可以让用户更加专注的写文章，而不需要费尽心力的考虑样式，相对于html已经算是轻量级语言，像有道云笔记也支持Markdown写作。并且Markdown完全兼容html，也就是可以在文章里直接插入html代码。比如给博文添加音乐，就可以直接把音乐的外链html代码插入文章中。具体语法参看：<a href="https://www.appinn.com/markdown/">Markdown 语法说明(简体中文版)</a> 可以说十分钟就可以入门。当然，工欲善其事必先利其器，选择一个好的Markdown编辑器也是非常重要的，这里推荐MarkPad 和The Markdown Editor for Windows ，这是带有预览效果的编辑器，也可以使用本地的文本编辑器，更多的Markdown的语法与编辑器自己可以搜索了解。</p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3><p>我们开始正式发布上线博客文章，在命令行中输入：<br>hexo n “博客名字”</p><p>我们会发现在blog根目录下的source文件夹中的_post文件夹中多了一个 博客名字.md 文件，使用Markdown编辑器打开，就可以开始你的个人博客之旅了，Markdown常用的样式也就十来种，完全能够满足一般博文的样式要求，这是我的一篇博文内容示例：<br><img src="https://wx3.sinaimg.cn/bmiddle/008oqqa4ly1gu4k482eh3j60k00amjs702.jpg"></p><p>通过带有预览样式的Markdown编辑器实时预览书写的博文样式，也可以通过命令 hexo s –debug 在本地浏览器的localhost:4000 预览博文效果。写好博文并且样式无误后，通过<code>hexo clean</code>,<code>hexo g</code>、<code>hexo d</code>清除缓存、生成、部署网页。随后可以在浏览器中输入域名浏览。</p><h3 id="寻找图床"><a href="#寻找图床" class="headerlink" title="寻找图床"></a>寻找图床</h3><p>图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法，<img src="/.site//l/Desktop/%E5%A4%96%E9%83%A8%E9%93%BE%E6%8E%A5" alt="图片信息"> 完成图片的插入，这种网站就被成为图床。常见的简易的图床网站有：贴图库图片外链 国内算比较好的图床我认为有两个：新浪微博和 七牛云 ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细，下图是博文插入图片，使用图床外链的示例：</p><h3 id="hexo文章图片不显示的坑"><a href="#hexo文章图片不显示的坑" class="headerlink" title="hexo文章图片不显示的坑"></a>hexo文章图片不显示的坑</h3><p><a href="https://carolinelh.github.io/2019/11/20/hexo%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E5%9D%91/">2019-11-20</a></p><h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>我发现我的文章的图片都出不来</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><ul><li>首先需要配置_config.yml里面的post_asset_folder:false这个选项设置为true</li><li>安装<a href="https://github.com/7ym0n/hexo-asset-image">hexo-asset-image</a>这个插件。安装了这个插件之后，在使用命令hexo new “xxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹，可以把图片放入该文件夹。</li><li>使用markdown语法<img src="https://carolinelh.github.io/2019/11/20/hexo%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E5%9D%91/xxx.png" alt="xxx">直接插入图片即可。</li></ul><p>正常来说，这样就可以解决问题了，但是我发现图片仍然出不来。我看了下图片的路径:<code>&lt;img src=&quot;//yoursite.com/2019/11/20/git学习/git.png&quot; alt=&quot;.git的目录&quot;&gt;</code>,说明问题出在找不到我的文章所在域名。于是我找到了文章所对应的那个index.html，发现index.html中的所有的图片的域名就是//yoursite.com，于是我怀疑是我的配置有问题。。。。</p><p>最终我发现是在根目录下的_config.yml中：<br><img src="https://carolinelh.github.io/2019/11/20/hexo%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E5%9D%91/config.png" alt="img"><br>没有配置我的网站的域名！！！！！！</p><p>最后我重新配置<br><img src="https://carolinelh.github.io/2019/11/20/hexo%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87%E4%B8%8D%E6%98%BE%E7%A4%BA%E7%9A%84%E5%9D%91/configed.png" alt="img"><br>解决问题！！</p><h3 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h3><p>所谓的个性化设置就是根据个人需要添加不同的插件及功能。<br>基本的有：<br>在站点配置文件_config.yml修改基本的站点信息</p><p><img src="https://wx4.sinaimg.cn/bmiddle/008oqqa4ly1gu4km5iemjj60m805vjs202.jpg"></p><p>依次是网站标题、副标题、网站描述、作者、网站头像外部链接、网站语言、时区等。<br>在主题配置文件_config.yml修改基本的主题信息，如：</p><p><img src="https://wx2.sinaimg.cn/bmiddle/008oqqa4ly1gu4kncbtfoj60ag02e3yj02.jpg"></p><p>博文打赏的微信、支付宝二维码图片，这里我是直接把这两张放在根目录的source文件夹中，并没有使用图床外链。</p><p><img src="https://wx1.sinaimg.cn/bmiddle/008oqqa4ly1gu4kon0vozj60k008r0tg02.jpg"></p><p>社交外链的设置，即在侧栏展示你的个人社交网站信息。</p><p><img src="https://wx3.sinaimg.cn/bmiddle/008oqqa4ly1gu4kpsmcltj60ge030wem02.jpg"></p><p>博文分享的插件jiathis，值设置为true。在配置文件中有很多的个性化设置，可以自尝试更多的修改。<br>进阶个性化：</p><h4 id="添加网易云音乐"><a href="#添加网易云音乐" class="headerlink" title="添加网易云音乐"></a>添加网易云音乐</h4><p>打开网页版的网易云音乐，选择喜欢的音乐，点击生成外链播放器</p><p><img src="https://wx4.sinaimg.cn/bmiddle/008oqqa4ly1gu4krlwezmj60jf0cgjse02.jpg"></p><p>复制外链的代码</p><p>![(<a href="https://wx3.sinaimg.cn/bmiddle/008oqqa4ly1gu4ksj6m5yj60k00igdgk02.jpg)]">https://wx3.sinaimg.cn/bmiddle/008oqqa4ly1gu4ksj6m5yj60k00igdgk02.jpg)]</a></p><p>比如在侧栏插入这首歌的音乐播放器，修改 blog\themes\next\layout_macro的sidebar.swig文件，添加刚刚复制的外链代码</p><p>![(<a href="https://wx4.sinaimg.cn/bmiddle/008oqqa4ly1gu4obcqtfij60k0075zkq02.jpg)]">https://wx4.sinaimg.cn/bmiddle/008oqqa4ly1gu4obcqtfij60k0075zkq02.jpg)]</a></p><p>重新生成、部署网页，效果如下</p><p>![(<a href="https://wx2.sinaimg.cn/bmiddle/008oqqa4ly1gu4ocbxvg2j607606o74902.jpg)]">https://wx2.sinaimg.cn/bmiddle/008oqqa4ly1gu4ocbxvg2j607606o74902.jpg)]</a></p><h3 id="设置背景"><a href="#设置背景" class="headerlink" title="设置背景"></a>设置背景</h3><p>把你挑选的背景图片命名为：background.jpg，放在blog\themes\next\source\images里，在blog\themes\next\source\css_custom文件的custom.styl首部添加：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  background:url(/images/background.jpg);</span><br><span class="line">  background-attachment: fixed;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>background-attachment: fixed;是固定背景图片。<br>这是设置一张静态图片作为背景，其实Next主题自带有动态的背景效果，修改主题配置文件中的canvas_nest: false为canvas_nest: true即可。<br>增加侧栏菜单条目<br>默认的侧栏菜单条目有：首页、归档、标签、关于、搜索等。如果你想要增加其他的菜单条目，修改主题配置文件_config.yml里的<code>Menu Settings中的menu和menu_icons</code>两个地方</p><p>其中menu里是配置菜单项对应的页面位置（如：/love），menu_icons对应菜单项的图标，这里的图标是来自于Font Awesome ，所以你需要在Font Awesome网站上找到你需要的icon，然后把该icon的名字写在menu_icons对应菜单名后面，注意冒号有一个英文输入状态的空格。设置好后，在命令行里输入：<br>hexo new page “你所要增加的菜单项名称（要和你在menu中的填写要匹配）”<br>新建的页面在博客根目录下的source文件里，这时你就可以对新建的页面自定义设计。</p><p>还有更多的进阶个性化设置，如SEO、评论系统、个人头像、博客分享、订阅功能、High功能、404网页设置等，可以参看：<br>主题配置 - NexT 使用文档<br>第三方服务集成 - NexT 使用文档<br>内置标签 - NexT 使用文<br>档进阶设定 - NexT 使用文档<br>有很多人私信问我High功能特效如何设置，这里推荐一篇同是Next主题网站博主的文章：为Hexo Next主题添加哈林摇特效（五）<br>其他</p><h4 id="终于写到这里了，也算是基本圆满完成了我的写作初衷，总结自己的一些经验，分享一些有趣的东西，不过脖子也是僵硬的受不了。我知道很多人想要建立自己的个人网站却一直没有付诸行动，希望这篇文章能给你一点点灵感与想法，just-do-it。本文是windows平台的搭建过程，其他平台可以参看相关资料，也有很多其他优秀的博客框架值得学习。如果有任何建议或想法、或疑问欢迎在评论区交流，-做好的网站不妨在评论区贴出网址，让大家一起学习。"><a href="#终于写到这里了，也算是基本圆满完成了我的写作初衷，总结自己的一些经验，分享一些有趣的东西，不过脖子也是僵硬的受不了。我知道很多人想要建立自己的个人网站却一直没有付诸行动，希望这篇文章能给你一点点灵感与想法，just-do-it。本文是windows平台的搭建过程，其他平台可以参看相关资料，也有很多其他优秀的博客框架值得学习。如果有任何建议或想法、或疑问欢迎在评论区交流，-做好的网站不妨在评论区贴出网址，让大家一起学习。" class="headerlink" title="终于写到这里了，也算是基本圆满完成了我的写作初衷，总结自己的一些经验，分享一些有趣的东西，不过脖子也是僵硬的受不了。我知道很多人想要建立自己的个人网站却一直没有付诸行动，希望这篇文章能给你一点点灵感与想法，just do it。本文是windows平台的搭建过程，其他平台可以参看相关资料，也有很多其他优秀的博客框架值得学习。如果有任何建议或想法、或疑问欢迎在评论区交流， 做好的网站不妨在评论区贴出网址，让大家一起学习。"></a>终于写到这里了，也算是基本圆满完成了我的写作初衷，总结自己的一些经验，分享一些有趣的东西，不过脖子也是僵硬的受不了。我知道很多人想要建立自己的个人网站却一直没有付诸行动，希望这篇文章能给你一点点灵感与想法，just do it。本文是windows平台的搭建过程，其他平台可以参看相关资料，也有很多其他优秀的博客框架值得学习。如果有任何建议或想法、或疑问欢迎在评论区交流， 做好的网站不妨在评论区贴出网址，让大家一起学习。</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言：&quot;&gt;&lt;a href=&quot;#前言：&quot; class=&quot;headerlink&quot; title=&quot;前言：&quot;&gt;&lt;/a&gt;前言：&lt;/h2&gt;&lt;p&gt;随着互联网浪潮的翻腾，国内外涌现出越来越多优秀的社交网站让用户分享信息更加便捷。然后，如果你是一个不甘寂寞的程序猿（媛），是否也想要</summary>
      
    
    
    
    
    <category term="hexo\搭建" scheme="https://fycy.site/tags/hexo-%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>我来了</title>
    <link href="https://fycy.site/2021/09/12/%E6%88%91%E6%9D%A5%E4%BA%86/"/>
    <id>https://fycy.site/2021/09/12/%E6%88%91%E6%9D%A5%E4%BA%86/</id>
    <published>2021-09-12T02:14:08.000Z</published>
    <updated>2021-09-12T02:14:08.483Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://fycy.site/2021/09/09/hello-world/"/>
    <id>https://fycy.site/2021/09/09/hello-world/</id>
    <published>2021-09-08T16:40:32.983Z</published>
    <updated>2021-09-08T16:40:32.983Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
